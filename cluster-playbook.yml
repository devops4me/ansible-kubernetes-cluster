---
- hosts: all
  become: true
  name: Configure the Kubernetes Cluster Nodes
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=arm64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce=5:19.03.15~3-0~ubuntu-focal
      - docker-ce-cli=5:19.03.15~3-0~ubuntu-focal
      - containerd.io
    notify:
      - docker status

  - name: Add ubuntu user to docker group
    user:
      name: ubuntu
      group: docker

  - name: Write docker daemon.json to all nodes
    copy:
      dest: /etc/docker/daemon.json
      content: "{ \"exec-opts\": [\"native.cgroupdriver=systemd\"] }"

  - name: Restart Docker to switch cgroup driver to systemd
    become: true
    command: systemctl restart docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl
        - kubernetes-cni

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Reset any previous installs run by kubeadm init
    become: true
    command: kubeadm reset --force

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.0.61" --apiserver-cert-extra-sans="192.168.0.61" --node-name=192.168.0.61 --pod-network-cidr=192.168.0.0/24 --token=wls1ik.grvjcscyd0xrysrx
    register: kubeadm_init_output

  - name: Store the Logs generated by the kubeadm cluster initialize command
    local_action: copy content={{ kubeadm_init_output.stdout }} dest=kubeadm-init-output.log
    become: false

  - name: Setup kubeconfig for ubuntu user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/ubuntu/.kube
     - cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
     - chown ubuntu:ubuntu /home/ubuntu/.kube/config

  - name: Install Calico Pod Networking for Less than 50 Nodes
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    become: true
    register: join_command

  - name: Copy join command to local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="node-join-cmd.sh"
    become: false

  - name: Fetch kubectl configuration file from the master
    fetch:
      src: /home/ubuntu/.kube/config
      dest: kubectl-configuration.yml
      flat: yes

  - name: Copy the kubectl configuration file to its local home
    become: false
    copy:
     src: kubectl-configuration.yml
     dest: ~/.kube/config
    delegate_to: localhost

  handlers:
    - name: docker status
      service: name=docker state=started
